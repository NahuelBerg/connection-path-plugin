{"version":3,"file":"connection-path-plugin.min.js","sources":["../src/transformers.js","../src/types.js","../src/utils.js","../src/index.js"],"sourcesContent":["export default {\r\n    LINEAR: () => ([x1, y1, x2, y2]) => {\r\n        return [[x1, y1], [x2, y2]];\r\n    },\r\n    DEFAULT: ({ vertical = false, curvature = 0.4 }) => ([x1, y1, x2, y2]) => {\r\n        const p1 = [x1, y1];\r\n        const p4 = [x2, y2];\r\n\r\n        if (vertical) {\r\n            [x1, y1] = [y1, x1];\r\n            [x2, y2] = [y2, x2];\r\n        }\r\n\r\n        const c1 = x1 + Math.abs(x2 - x1) * curvature;\r\n        const c2 = x2 - Math.abs(x2 - x1) * curvature;\r\n        const p2 = vertical ? [y1, c1] : [c1, y1];\r\n        const p3 = vertical ? [y2, c2] : [c2, y2];\r\n\r\n        return [p1, p2, p3, p4];\r\n    }\r\n}","export default {\r\n    DEFAULT: 'DEFAULT',\r\n    LINEAR: 'LINEAR'\r\n}","export function getAngle({ x: x1, y: y1 }, { x: x2, y: y2 }) {\r\n    const dx = x1 - x2;\r\n    const dy = y1 - y2;\r\n\t\r\n    return 180 * Math.atan2(dy, dx) / Math.PI;\r\n}\r\n\r\nexport function updateMarker(path, marker, { el, connection }) {\r\n    const length = path.getTotalLength();\r\n    const p1 = path.getPointAtLength(length-25);\r\n    const p2 = path.getPointAtLength(length);\r\n\r\n    marker.setAttribute('transform', `translate(${p1.x}, ${p1.y}) rotate(${180 + getAngle(p1, p2)})`)\r\n}","import * as d3 from 'd3-shape';\r\nimport Transformer from './transformers';\r\nimport Type from './types';\r\nimport { updateMarker } from './utils';\r\n\r\nclass PathFactory {\r\n\r\n    constructor(points, curve) {\r\n        this.points = points;\r\n        this.curve = curve;\r\n    }\r\n\r\n    line(transformer) {\r\n        let points = transformer(this.points);\r\n\r\n        return d3.line()\r\n            .x(d => d[0])\r\n            .y(d => d[1])\r\n            .curve(this.curve)\r\n            (points)\r\n    }\r\n\r\n    getData(transformer, options) {\r\n        return this.line(transformer(options));\r\n    }\r\n}\r\n\r\nfunction install(editor, { type, transformer, arrow, curve, options = {} }) {\r\n    type = type || Type.DEFAULT;\r\n    curve = curve || d3.curveBasis;\r\n\r\n    if (transformer && typeof transformer !== 'function') throw new Error('transformer property must be a function');\r\n    if (!Transformer[type]) throw new Error(`transformer with type ${type} doesn't exist`);\r\n    \r\n    editor.on('connectionpath', data => {\r\n        const { points } = data;\r\n        const factory = new PathFactory(points, curve);\r\n\r\n        data.d = factory.getData(transformer || Transformer[type], options);\r\n    });\r\n\r\n    if (arrow) {\r\n        editor.on('renderconnection', ({ el, connection }) => {\r\n            const path = el.querySelector('path');\r\n            const marker = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n\r\n            el.querySelector('svg').appendChild(marker);\r\n            marker.classList.add('marker');\r\n            marker.setAttribute('fill', arrow.color || 'steelblue');\r\n            marker.setAttribute('d', arrow.marker || 'M-5,-10 L-5,10 L20,0 z');\r\n\r\n            updateMarker(path, marker, { el, connection });\r\n        });\r\n\r\n        editor.on('updateconnection', ({ el, connection }) => {\r\n            const path = el.querySelector('path');\r\n            const marker = el.querySelector('.marker');\r\n\r\n            updateMarker(path, marker, { el, connection });\r\n        });\r\n    }\r\n}\r\n\r\nexport default {\r\n    install,\r\n    ...d3,\r\n    ...Type\r\n}"],"names":["vertical","curvature","x1","y1","x2","y2","p1","p4","c1","Math","abs","c2","updateMarker","path","marker","el","connection","dx","dy","length","getTotalLength","getPointAtLength","p2","setAttribute","x","y","atan2","PI","PathFactory","points","curve","transformer","this","d3","d","options","line","editor","type","arrow","Type","DEFAULT","Error","Transformer","on","data","factory","getData","querySelector","document","createElementNS","appendChild","classList","add","color"],"mappings":";;;;;8mOAAe,QACH,kBAAM,+BACH,CAAC,YAAU,uBAEb,oBAAGA,SAAAA,oBAAkBC,UAAAA,aAAY,YAAU,yBAAEC,OAAIC,OAAIC,OAAIC,OACxDC,EAAK,CAACJ,EAAIC,GACVI,EAAK,CAACH,EAAIC,MAEZL,EAAU,OACC,CAACG,EAAID,uBACL,CAACG,EAAID,qBAGdI,EAAKN,EAAKO,KAAKC,IAAIN,EAAKF,GAAMD,EAC9BU,EAAKP,EAAKK,KAAKC,IAAIN,EAAKF,GAAMD,QAI7B,CAACK,EAHGN,EAAW,CAACG,EAAIK,GAAM,CAACA,EAAIL,GAC3BH,EAAW,CAACK,EAAIM,GAAM,CAACA,EAAIN,GAElBE,QClBb,SACF,iBACD,UCKL,SAASK,EAAaC,EAAMC,OAAUC,KAAIC,mBAPnBd,EAAOC,EAC3Bc,EACAC,EAMAC,EAASN,EAAKO,iBACdd,EAAKO,EAAKQ,iBAAiBF,EAAO,IAClCG,EAAKT,EAAKQ,iBAAiBF,KAE1BI,aAAa,yBAA0BjB,EAAGkB,OAAMlB,EAAGmB,eAAa,OAAmBH,EAZhEpB,KAY4DI,GAZ/DkB,EAAUrB,IAAHsB,EACxBR,EAAKf,IAD8BsB,EAEnCN,EAAKf,IAFqCsB,EAIzC,IAAMhB,KAAKiB,MAAMR,EAAID,GAAMR,KAAKkB,cCCrCC,wBAEUC,EAAQC,8GACXD,OAASA,OACTC,MAAQA,yCAGZC,OACGF,EAASE,EAAYC,KAAKH,eAEvBI,SACFT,EAAE,mBAAKU,EAAE,KACTT,EAAE,mBAAKS,EAAE,KACTJ,MAAME,KAAKF,MAHTG,CAIFJ,mCAGDE,EAAaI,UACVH,KAAKI,KAAKL,EAAYI,+BAIrC,SAAiBE,SAAUC,IAAAA,KAAMP,IAAAA,YAAaQ,IAAAA,MAAOT,IAAAA,UAAOK,QAAAA,aAAU,UAC3DG,GAAQE,EAAKC,UACZX,GAASG,aAEbF,GAAsC,mBAAhBA,EAA4B,MAAM,IAAIW,MAAM,+CACjEC,EAAYL,GAAO,MAAM,IAAII,+BAA+BJ,sBAE1DM,GAAG,iBAAkB,gBAChBf,EAAWgB,EAAXhB,OACFiB,EAAU,IAAIlB,EAAYC,EAAQC,KAEnCI,EAAIY,EAAQC,QAAQhB,GAAeY,EAAYL,GAAOH,KAG3DI,MACOK,GAAG,mBAAoB,gBAAG7B,IAAAA,GAAIC,IAAAA,WAC3BH,EAAOE,EAAGiC,cAAc,QACxBlC,EAASmC,SAASC,gBAAgB,6BAA8B,UAEnEF,cAAc,OAAOG,YAAYrC,KAC7BsC,UAAUC,IAAI,YACd9B,aAAa,OAAQgB,EAAMe,OAAS,eACpC/B,aAAa,IAAKgB,EAAMzB,QAAU,4BAE5BD,EAAMC,EAAQ,CAAEC,KAAIC,mBAG9B4B,GAAG,mBAAoB,gBAAG7B,IAAAA,GAAIC,IAAAA,aACpBD,EAAGiC,cAAc,QACfjC,EAAGiC,cAAc,WAEL,CAAEjC,KAAIC,oBAOtCiB,EACAO"}